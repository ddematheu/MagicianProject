package magicianapp;


import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ddema
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    String Magician = "";
    String Holiday = "";
    String Status = "";
    String Customer = "";
    public MainFrame() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        magiciansCombo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        holidayCombo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        CustomerText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        BookBut = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        StatusCombo = new javax.swing.JComboBox<>();
        StatBut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        Connection con;
        Statement st;
        ResultSet Magicians;
        try{
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/Magicians", "java", "java");
            st = con.createStatement();
            String s = "select magicians from magicians";
            Magicians = st.executeQuery(s);
            magiciansCombo.addItem("");
            while(Magicians.next()) magiciansCombo.addItem(Magicians.getString(1));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Connection Error");
        }
        finally{
            try{
                //st.close();
                //Magicians.close();
                //con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Connection Error Close");
            }
        }
        magiciansCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                magiciansComboActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 48;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 10, 0, 0);
        getContentPane().add(magiciansCombo, gridBagConstraints);

        jLabel1.setText("Magician:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 43, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        try
        {
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/Magicians","java","java");
            Statement stat = conn.createStatement();
            ResultSet rs = stat.executeQuery("select * FROM JAVA.Bookings");
            DefaultTableModel model = (DefaultTableModel) Table.getModel();
            model.addColumn("Customer");
            model.addColumn("Magician");
            model.addColumn("Holiday");
            //To remove previously added rows
            while(Table.getRowCount() > 0)
            {
                model.removeRow(0);
            }
            int columns = rs.getMetaData().getColumnCount();

            while(rs.next())
            {

                String n = rs.getString("Customer");
                String e= rs.getString("Magician");
                String f= rs.getString("Holiday");
                //Object[][]data={{n,e}};
                // This will add row from the DB as the last row in the JTable.
                model.insertRow(Table.getRowCount(), new Object[] {n, e,f});

            }

            rs.close();
            stat.close();
            conn.close();
        }
        catch(Exception e)
        {
            System.err.println("Got an exception! ");
            System.err.println(e.getMessage());
        }
        Table.setEnabled(false);
        jScrollPane1.setViewportView(Table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 390;
        gridBagConstraints.ipady = 214;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(25, 15, 11, 10);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        Statement rt;
        ResultSet Holiday;
        try{
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/Magicians", "java", "java");
            rt = con.createStatement();
            String s = "select Holiday from Holiday";
            Holiday = rt.executeQuery(s);
            holidayCombo.addItem("");
            while(Holiday.next()) holidayCombo.addItem(Holiday.getString(1));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Connection Error");
        }
        finally{
            try{
                //st.close();
                //Magicians.close();
                //con.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Connection Error Close");
            }
        }
        holidayCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayComboActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 90;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 4, 0, 0);
        getContentPane().add(holidayCombo, gridBagConstraints);

        jLabel2.setText("Holiday:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 13, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        CustomerText.setText("Enter Name");
        CustomerText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 78;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 4, 0, 0);
        getContentPane().add(CustomerText, gridBagConstraints);

        jLabel3.setText("Customer:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 12, 0, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        BookBut.setText("Book");
        BookBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookButActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 71, 7, 46);
        getContentPane().add(BookBut, gridBagConstraints);

        jLabel4.setText("Status:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 35, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        StatusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Holiday", "Magician", "Customer","Waitlist" }));
        StatusCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusComboActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.ipadx = 48;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 4, 0, 0);
        getContentPane().add(StatusCombo, gridBagConstraints);

        StatBut.setText("Status");
        StatBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatButActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 71, 0, 0);
        getContentPane().add(StatBut, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void magiciansComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_magiciansComboActionPerformed
        // TODO add your handling code here:
        Magician = (String) magiciansCombo.getSelectedItem();
        System.out.println(Magician);
    }//GEN-LAST:event_magiciansComboActionPerformed

    private void holidayComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayComboActionPerformed
        // TODO add your handling code here:
        Holiday = (String) holidayCombo.getSelectedItem();
        System.out.println(Holiday);
    }//GEN-LAST:event_holidayComboActionPerformed

    private void BookButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookButActionPerformed
        // TODO add your handling code here:
            try { 
            String url = "jdbc:derby://localhost:1527/Magicians"; 
            Connection conn = DriverManager.getConnection(url,"java","java"); 
            Statement st = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY); 
            ResultSet mag = st.executeQuery("Select magicians from magicians where magicians not in ( Select magician from bookings where bookings.holiday = '"+Holiday+"' )");
            if (!mag.isBeforeFirst() ) 
            {    
            System.out.println("No data"); 
            java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
            st.executeUpdate("INSERT INTO Waitlist " + 
            "VALUES ('" + Customer + "', '" + Holiday + "', '" + currentTimestamp + "')"); 
            conn.close();
            }
            else
            {
            mag.next();
            String Mag = (String) mag.getString(1);
            System.out.println(Mag);
            st.executeUpdate("INSERT INTO BOOKINGS " + 
            "VALUES ('" + Customer + "', '" + Mag + "', '" + Holiday + "')"); 
            conn.close(); 
            }
            
        } catch (Exception e) { 
            System.err.println("Got an exception! "); 
            System.err.println(e.getMessage()); 
        } 
        FillTable(Table, "select * FROM JAVA.Bookings");
    }//GEN-LAST:event_BookButActionPerformed

    private void StatusComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusComboActionPerformed
        // TODO add your handling code here:
        Status = (String) StatusCombo.getSelectedItem();
        System.out.println(Status);
    }//GEN-LAST:event_StatusComboActionPerformed

    private void StatButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatButActionPerformed
        // TODO add your handling code here:
        if(Status == "Holiday")
        FillTable(Table,"select * FROM Bookings where HOLIDAY = '" + Holiday + "'");
        else if(Status == "Magician")
        FillTable(Table,"select * FROM Bookings where Magician = '" + Magician + "'");
        else if(Status == "Customer")
        FillTable(Table,"select * FROM Bookings where Customer = '" + Customer + "'");
        else if(Status == "Waitlist")
        FillTable(Table,"select * FROM Waitlist ");
    }//GEN-LAST:event_StatButActionPerformed

    private void CustomerTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerTextActionPerformed
        // TODO add your handling code here:
        Customer = (String) CustomerText.getText();
        System.out.println(Customer);
    }//GEN-LAST:event_CustomerTextActionPerformed

    public void FillTable(JTable table, String Query)
{
    try
    {
        Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/Magicians","java","java"); 
        Statement stat = conn.createStatement();
        ResultSet rs = stat.executeQuery(Query);
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        //To remove previously added rows
        while(table.getRowCount() > 0) 
        {
            model.removeRow(0);
        }
        int columns = rs.getMetaData().getColumnCount(); 
        
        while(rs.next())
        {  
            String[]Columns = new String[3];
            for(int i =1; i<= columns;i++)
            {
                Columns[i-1]= rs.getMetaData().getColumnName(i);
            }
            
            String n = rs.getString(Columns[0]);
            String e= rs.getString(Columns[1]);
            String f= rs.getString(Columns[2]);
            //Object[][]data={{n,e}};
            // This will add row from the DB as the last row in the JTable. 
            model.insertRow(table.getRowCount(), new Object[] {n, e,f});

        }

        rs.close();
        stat.close();
        conn.close();
    }
    catch(Exception e)
    {
            System.err.println("Got an exception! "); 
            System.err.println(e.getMessage()); 
    }
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BookBut;
    private javax.swing.JTextField CustomerText;
    private javax.swing.JButton StatBut;
    private javax.swing.JComboBox<String> StatusCombo;
    private javax.swing.JTable Table;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JComboBox<String> holidayCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> magiciansCombo;
    // End of variables declaration//GEN-END:variables
}
